# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#

# ymlの記法などは https://qiita.com/mczkzk/items/7be753dc221c2f049670 を参照
version: 2

# orbを使うなら https://circleci.com/orbs/registry/orb/circleci/gradle あたりを使ってもよい。これを使うと勝手にビルドとかやってくれる感じ？
# orbs:
#   gradle: circleci/gradle@1.0.11

jobs:
  build:
    docker:
    # gradleを使ってうんぬんは、これを入れておけばOK
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    # environment:
    #   # Customize the JVM maximum heap limit
    #   JVM_OPTS: -Xmx3200m
    #   TERM: dumb

    steps:
        - checkout

        # キャッシュを取り込む
        - restore_cache:
            keys:
                # https://circleci.com/docs/2.0/configuration-reference/#save_cache このあたりの記法に従って記述。 {{ hoge }} はデフォルト定義されている変数
                - v1-dependencies-{{ checksum "build.gradle" }}
                # fallback to using the latest cache if no exact match is found
                - v1-dependencies-
        - run:
            name: install nkf
            command: |
              cd /
              sudo wget 'http://ja.osdn.net/projects/nkf/downloads/70406/nkf-2.1.5.tar.gz/' -O nkf-2.1.5.tar.gz
              sudo chmod 777 nkf-2.1.5.tar.gz
              sudo ls -a nkf-2.1.5.tar.gz
              sudo tar zxvf nkf-2.1.5.tar.gz
              cd nkf-2.1.5
              sudo make
              sudo make install

        # 依存関係取り込み
        - run: gradle dependencies

        # テストはなしでビルドだけを実行する
        - run: gradle build -x test

        # キャッシュに保存
        - save_cache:
            paths:
                - ~/.gradle
            key: v1-dependencies-{{ checksum "build.gradle" }}

        # テスト
        - run: 
                name: execute test
                command: gradle test
        - run: &urlencoded echo  ブランチ :${CIRCLE_BRANCH} | nkf -WwMQ | sed 's/=$//g' | tr = % | tr -d '\n'
        - run:
            name: report result of test to slack
            command: curl -X POST -H "Content-type:application/json" --data "{'text':*urlencoded }" https://hooks.slack.com/services/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